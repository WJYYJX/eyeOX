import sys
from PyQt5 import QtWidgets
from PyQt5.QtWidgets import *
from PyQt5.QtGui import *
import os


class Qt_Window(QWidget):
    def __init__(self):
        self._app = QtWidgets.QApplication([])
        super(Qt_Window, self).__init__()

    def init_ui(self):
        self.win = QMainWindow()

        self.comboBox = QComboBox(self.win)
        self.comboBox1 = QComboBox(self.win)
        self.number_lable = QLabel(self.win)
        self.number_lable1 = QLabel(self.win)
        self.open_Button = QPushButton(self.win)
        self.detect_image = QLabel(self.win)
        self.detect_image1 = QLabel(self.win)

        # 设置路径
        self.path = ("C:\\Users\\111\\Desktop")
        self.path1 = ("C:\\Users\\111\\Desktop")

        self.comboBox.resize(200, 50)
        self.comboBox.move(600, 800)
        self.comboBox1.resize(200, 50)
        self.comboBox1.move(1400, 800)
        self.img_list = os.listdir(self.path)
        self.img_list1 = os.listdir(self.path1)
        self.comboBox.addItems([self.img_list[i] for i in range(len(self.img_list))])
        self.comboBox.activated.connect(self.show_img)

        self.comboBox1.addItems([self.img_list1[i] for i in range(len(self.img_list1))])
        self.comboBox1.activated.connect(self.show_img1)

        self.open_Button.resize(200, 50)
        self.open_Button.move(1000, 800)
        self.open_Button.setText("退出")
        self.open_Button.clicked.connect(self.exit)

        self.detect_image.resize(700, 550)
        self.detect_image.move(550, 100)

        self.detect_image1.resize(700, 550)
        self.detect_image1.move(1400, 100)

        self.number_lable.resize(200, 50)
        self.number_lable.move(900, 700)

        self.number_lable1.resize(200, 50)
        self.number_lable1.move(1400, 700)

        self.win.showFullScreen()
        sys.exit(self._app.exec_())

    def show_img(self):
        img = self.comboBox.currentText()
        pix = QPixmap(self.path + "\\" + img)
        self.detect_image.setPixmap(pix)
        self.detect_image.setScaledContents(True)
        lable = img.split(".")[0]
        self.number_lable.setText(lable)

    def show_img1(self):
        img = self.comboBox1.currentText()
        pix = QPixmap(self.path + "\\" + img)
        self.detect_image1.setPixmap(pix)
        self.detect_image1.setScaledContents(True)
        lable = img.split(".")[0]
        self.number_lable1.setText(lable)

    def exit(self):
        while True:
            sys.exit(0)


s = Qt_Window()
s.init_ui()



# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'oxeye.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMainWindow, QApplication, QWidget, QMessageBox, QLineEdit, QInputDialog, QFileDialog, \
    QColorDialog, QFontDialog, QLabel, QPushButton, QVBoxLayout, QStyle, QAction
from PyQt5.QtGui import QIcon, QPixmap, QPainter, QPen, QColor, QBrush, QFont
from PyQt5.QtCore import Qt, QRect

class mylable(QLabel):
    x0 = 0
    y0 = 0
    x1 = 0
    y1 = 0
    flag = False

    def __init__(self, parent):
        super(mylable, self).__init__(parent)
        self.pixmap = QPixmap(597, 497)  # 考虑边框的间距 减去px
        self.pixmap.fill(Qt.white)
        self.setStyleSheet("border: 2px solid red")
        self.Color = Qt.blue  # pen color: defult:blue
        self.penwidth = 4  # pen width : default:4

    def paintEvent(self, event):
        # super().paintEvent(event)

        painter = QPainter(self.pixmap)
        painter.setPen(QPen(self.Color, self.penwidth, Qt.SolidLine))
        painter.drawLine(self.x0, self.y0, self.x1, self.y1)

        Label_painter = QPainter(self)
        Label_painter.drawPixmap(2, 2, self.pixmap)

    def mousePressEvent(self, event):
        self.x1 = event.x()
        self.y1 = event.y()
        self.flag = True

    def mouseMoveEvent(self, event):
        if self.flag:
            self.x0 = self.x1
            self.y0 = self.y1
            self.x1 = event.x()
            self.y1 = event.y()
            self.update()

    def mouseReleaseEvent(self, event):
        self.flag = False





class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.comboBox = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox.setGeometry(QtCore.QRect(30, 50, 141, 22))
        self.comboBox.setObjectName("comboBox")
        self.comboBox_2 = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox_2.setGeometry(QtCore.QRect(180, 50, 131, 22))
        self.comboBox_2.setObjectName("comboBox_2")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(340, 50, 91, 23))
        self.pushButton.setObjectName("pushButton")
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(640, 50, 75, 23))
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_3.setGeometry(QtCore.QRect(640, 100, 75, 23))
        self.pushButton_3.setObjectName("pushButton_3")
        self.pushButton_4 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_4.setGeometry(QtCore.QRect(640, 160, 31, 23))
        self.pushButton_4.setObjectName("pushButton_4")
        self.pushButton_5 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_5.setGeometry(QtCore.QRect(680, 160, 31, 23))
        self.pushButton_5.setObjectName("pushButton_5")
        self.pushButton_6 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_6.setGeometry(QtCore.QRect(720, 160, 31, 23))
        self.pushButton_6.setObjectName("pushButton_6")
        self.pushButton_7 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_7.setGeometry(QtCore.QRect(640, 350, 75, 23))
        self.pushButton_7.setObjectName("pushButton_7")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(110, 80, 391, 291))
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(110, 80, 391, 291))
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(140, 390, 54, 12))
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(450, 390, 54, 12))
        self.label_4.setObjectName("label_4")

        # self.lb = mylable(self)
        # self.lb.setGeometryshow_img(110, 103, 391, 291)

        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 23))
        self.menubar.setObjectName("menubar")
        self.menu = QtWidgets.QMenu(self.menubar)
        self.menu.setObjectName("menu")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.menubar.addAction(self.menu.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton.setText(_translate("MainWindow", "导出最后结果"))
        self.pushButton_2.setText(_translate("MainWindow", "自动标注"))
        self.pushButton_3.setText(_translate("MainWindow", "画笔"))
        self.pushButton_4.setText(_translate("MainWindow", "颜色"))
        self.pushButton_5.setText(_translate("MainWindow", "橡皮"))
        self.pushButton_6.setText(_translate("MainWindow", "文件"))
        self.pushButton_7.setText(_translate("MainWindow", "退出"))
        self.label.setText(_translate("MainWindow", "                    原始图"))
        self.label_2.setText(_translate("MainWindow", "                    标注图"))
        self.label_3.setText(_translate("MainWindow", "原始图"))
        self.label_4.setText(_translate("MainWindow", "标注图"))
        self.menu.setTitle(_translate("MainWindow", "眼底血管检测"))
